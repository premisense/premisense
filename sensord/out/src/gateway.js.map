{"version":3,"sources":["src/gateway.js"],"names":[],"mappings":"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","file":"out/src/gateway.js","sourceRoot":"../..","sourcesContent":["\"use strict\";\n\nvar assert = require('chai').assert;\nvar events = require('events');\nvar util = require('util');\nvar path = require('path');\nvar mqtt = require ('mqtt');\nvar child_process = require('child_process');\nvar fs = require('fs');\nvar split = require('split');\nvar _ = require('lodash');\n\nvar logging = require('./logging');\nvar logger = new logging.Logger(__filename);\n\n//TODO replace Q.Promise with Promise or async/await\n\nexport class Gateway {\n  constructor() {\n\n  }\n\n  start(): Promise {\n    throw \"not implemented\"\n  }\n}\n\nexport class ArduinoDevice {\n  id:string;\n  initString:string;\n\n  constructor(id:string,\n              initString:string) {\n    this.id = id;\n    this.initString = initString;\n  }\n}\n\nexport class ArduinoSerialGateway extends Gateway {\n  mqttClient:mqtt.Client;\n  topic:string;\n  commandTopic:string;\n  id:string;\n  devices:Array<ArduinoDevice>;\n  port:string;\n  initString:string;\n  remoteSSH:string;\n  initStringSent:boolean = false;\n  child = null; //child_process.ChildProcess\n\n  constructor(mqttClient:mqtt.Client,\n              topic:string,\n              id:string,\n              devices:Array<ArduinoDevice>,\n              port:string,\n              initString:string,\n              remoteSSH:string=undefined) {\n    super();\n    this.id = id;\n    this.devices = devices;\n    this.initString = initString;\n    this.mqttClient = mqttClient;\n    this.topic = topic;\n    this.commandTopic = util.format(\"%s/command/%s\", this.topic, this.id);\n\n    this.port = port;\n    this.remoteSSH = remoteSSH;\n  }\n\n  writeString(s: string) : void {\n    if (this.child == null) {\n      logger.error(util.format(\"rejecting command: %s. not connected to device\", s));\n    } else {\n      logger.debug(util.format(\"sending command: %s. to interface: %s\", s, this.id));\n      this.child.stdin.write(\"\\n\" + s + \"\\n\");\n    }\n  }\n\n  //child_process.ChildProcess\n  sendInitString(child) {\n\n    logger.debug(util.format(\"serial(%s): not_configured. (re)sending init string (%s)...\", this.id, this.initString));\n\n    if (this.initString.length > 0) {\n      child.stdin.write(this.initString + \"\\n\");\n    }\n\n    _.forEach(this.devices, (device) => {\n      if (device.initString.length > 0) {\n        logger.debug(util.format(\"serial(%s): (re)sending init string (%s) to device(%s)...\", this.id, device.initString, device.id));\n        child.stdin.write(device.initString + \"\\n\");\n      }\n    }, this);\n\n    this.initStringSent = true;\n  }\n\n  restart(cmd:string, args:Array<string>, resolve:any):void {\n    var self = this;\n\n    var child = child_process.spawn(cmd, args, {\n      stdio: ['pipe', 'pipe', 2]\n    });\n\n    self.child = child;\n\n    child.once(\"error\", (err) => {\n      self.child = null;\n      logger.error(\"failed to spawn child. error: \" + err.toString());\n      if (resolve) {\n        resolve(true);\n        resolve = null;\n      }\n    });\n\n    child.once(\"close\", (code) => {\n      self.child = null;\n      logger.debug(util.format(\"process %s exited with code %d. restarting in 1 second\", cmd, code));\n      Q.delay(1000).then(() => {\n        self.restart(cmd, args)\n      });\n    });\n\n    child.stdout.pipe(split())\n      .on('data', (line) => {\n        var fields = line.split(',');\n        //logger.debug(util.format(\"serial(%s): %s\", self.id, line));\n\n        //fields[1] !== self.deviceId\n\n        if (fields.length < 3 || fields[0] !== '0') {\n          logger.debug(util.format(\"serial(%s): IGNORED: %s\", self.id, line))\n\n\n        } else if (fields[3] === 'NOT_CONFIGURED') {\n\n          self.sendInitString(child);\n          if (resolve) {\n            resolve(true);\n            resolve = null;\n          }\n\n\n        } else if (fields[3] === 'STATE') {\n\n          var publishTopic = util.format(\"%s/sensor/%s/%s/state/%s\", self.topic, self.id, fields[1], fields[4]);\n\n          logger.debug(util.format(\"serial(%s): new state. publishing %s=%s\", self.id, publishTopic, fields[5]));\n\n          self.mqttClient.publish(publishTopic, fields[5]);\n\n\n        } else if (fields[3] == 'PING') {\n\n          if (!this.initStringSent) {\n\n            self.sendInitString(child);\n\n            if (resolve) {\n              resolve(true);\n              resolve = null;\n            }\n          }\n\n        } else {\n          logger.debug(util.format(\"serial(%s): IGNORED: %s\", self.id, line))\n        }\n      });\n\n  }\n\n  start():Promise {\n\n    logger.debug(\"MqttHub(%s): subscribing to topic: %s\", this.id, this.commandTopic);\n    this.mqttClient.subscribe(this.commandTopic, {qos: 2});\n    this.mqttClient.on('connect', () => {\n      self.mqttClient.subscribe(self.commandTopic, {qos: 2});\n    });\n\n    var self = this;\n    this.mqttClient.on('message', (topic, payload) => {\n      var payloadString = payload.toString();\n      if (topic.substr(0, self.commandTopic.length) === self.commandTopic) {\n\n        logger.debug(\"MqttHub(%s): received command. topic:%s, payload:%s\", self.id, topic, payloadString);\n\n        self.writeString(payloadString);\n      }\n    });\n\n    return new Promise ((resolve, reject) => {\n      if (fs.existsSync(this.port))\n        this.restart('./local_serial.sh', [this.port], resolve);\n      else\n        this.restart('./remote_serial.sh', [this.remoteSSH, this.port], resolve);\n    });\n  }\n}\n\n\n\n"]}