{"version":3,"sources":["src/app.js"],"names":[],"mappings":"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","file":"out/src/app.js","sourceRoot":"../..","sourcesContent":["\"use strict\";\n\nvar assert = require('chai').assert;\nvar events = require('events');\nvar mqtt = require ('mqtt');\nvar winston = require('winston');\nvar fs = require('fs');\nvar tty = require('tty');\nvar util = require('util');\nvar split = require('split');\nvar yargs = require('yargs');\nvar winston_syslog = require('winston-syslog');\nvar os = require('os');\nvar _ = require('lodash');\nvar daemon = require('daemon');\nvar U = require ('./u');\nvar gatewayModule = require('./gateway');\nvar config = require('./config');\n\nvar logging = require('./logging');\nvar logger = new logging.Logger(__filename);\n\nlet x = type({\n  a:number,\n  b:string\n});\n\nlet y = type(x, {\n  c:number,\n  d:string\n});\n\nfunction x1(o: xx) {\n\n}\n\nx1({a:1, b:\"asdf\"});\nx1({aa:\"asdf\", b:\"asdf\"});\n\n// the below exposes the Syslog transport\nvar syslog = winston_syslog.Syslog;\nprocess.title = \"sensord\";\n//----------------------------------------------------------------------------------------\nwinston.setLevels({\n  debug: 0,\n  info: 1,\n  notice: 2,\n  warning: 3,\n  error: 4,\n  crit: 5,\n  alert: 6,\n  emerg: 7\n});\nwinston.addColors({\n  debug: 'green',\n  info: 'cyan',\n  silly: 'magenta',\n  warn: 'yellow',\n  error: 'red'\n});\n\n//--------------------------------------------------------------------------\n//      define command line parser\n//--------------------------------------------------------------------------\nvar packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));\n\nvar args = yargs\n    .usage(\"Usage: $0 -f config [options]\")\n    .help('h')\n    .alias('h', 'help')\n    .option('v', {\n      alias: 'version',\n      demand: false,\n      describe: 'display package version'\n    })\n    .option('d', {\n      alias: 'debug',\n      demand: false,\n      describe: 'debug logging'\n    })\n    .option('b', {\n      alias: 'background',\n      demand: false,\n      describe: 'daemon mode'\n    })\n    .option('l', {\n      alias: 'log',\n      demand: false,\n      describe: 'add (winston) log transport. available transports: console:options | file:options | syslog:options | DailyRotateFile:options',\n      type: 'string'\n    })\n    .option('c', {\n      alias: 'config',\n      demand: false,\n      'default': '/etc/sensord.conf',\n      describe: 'config file',\n      type: 'string'\n    })\n    .option('p', {\n      alias: 'pidfile',\n      demand: false,\n      describe: 'create pid file',\n      type: 'string'\n    })\n    .strict()\n    .parse(process.argv)\n  ;\n\nfunction cliError (msg:string) {\n  console.error(\"CLI error: \" + msg);\n  process.exit(10);\n}\n\n\nif (args['v']) {\n  console.log(\"v\" + packageJson.version);\n  process.exit(0);\n}\n\nvar debugLog = (args['d']) ? true : false;\n\nwinston.remove(winston.transports.Console);\n\nvar appendTransport = function (transportType:string, options:any = undefined):boolean {\n  transportType = transportType.toLowerCase();\n\n  if (_.isString(options)) {\n    options = JSON.parse(options);\n  }\n  if (U.isNullOrUndefined(options)) {\n    options = {};\n  }\n  options.level = (debugLog) ? 'debug' : 'info';\n\n\n  if (transportType === 'console') {\n    if (U.isNullOrUndefined(options['colorize'])) {\n      var colorize : boolean = tty.isatty(1);\n      options[\"colorize\"] = colorize;\n    }\n    winston.add(winston.transports.Console, options);\n    return true;\n\n  } else if (transportType === 'file') {\n    winston.add(winston.transports.File, options);\n    return true;\n\n  } else if (transportType === 'dailyrotatefile') {\n    winston.add(winston.transports.DailyRotateFile, options);\n    return true;\n\n  } else if (transportType === 'syslog') {\n    options.json = false;\n    var transports:any;\n    transports = winston.transports;\n    winston.add(transports.Syslog, options);\n    return true;\n\n  }\n\n  return false;\n};\n\nif (!args['l']) {\n  appendTransport('console');\n} else {\n  var logTransports = args['l'];\n  if (!_.isArray(logTransports)) {\n    logTransports = [logTransports];\n  }\n\n  _.forEach(logTransports, (logTransportParam) => {\n    var pos = logTransportParam.indexOf(':');\n    var transportType:string;\n    var transportOptions:any;\n    if (pos > 0) {\n      transportType = logTransportParam.substr(0, pos);\n      transportOptions = logTransportParam.substr(pos+1);\n    } else {\n      transportType = logTransportParam;\n    }\n    if (!appendTransport(transportType, transportOptions)) {\n      cliError(\"failed to add transport: \" + logTransportParam);\n    }\n  });\n}\n\n//--------------------------------------------------------------------------\n//      load config file\n//--------------------------------------------------------------------------\nvar cfg:config.Config = new config.Config();\ncfg.loadf(args['c']);\n\n\n//--------------------------------------------------------------------------\nif (args['b']) {\n  daemon();\n}\n//--------------------------------------------------------------------------\nif (args['p']) {\n  fs.writeFileSync(args['p'], process.pid.toString());\n}\n//--------------------------------------------------------------------------\nlogger.debug(\"waiting for mqtt connection\");\n\n\ncfg.mqttClient.once('connect', () => {\n  logger.debug(\"connected to mqtt. starting gateways...\");\n\n  var startGateways:Array<Promise> = [];\n  _.forEach(cfg.gateways, (gw) => {\n    startGateways.push(gw.start());\n  }, this);\n\n  Promise.all(startGateways).then(() => {\n    logger.info(\"service started\");\n  });\n});\n"]}