{"version":3,"sources":["src/app.js"],"names":[],"mappings":"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","file":"out/src/app.js","sourceRoot":"../..","sourcesContent":["var assert = require('chai').assert;\nvar events = require('events');\nvar through = require('through');\nvar fs = require('fs');\nvar tty = require('tty');\nvar util = require('util');\nvar yargs = require('yargs');\nvar _ = require('lodash');\nvar winston = require('winston');\nvar winston_syslog = require('winston-syslog');\nvar os = require('os');\nvar Q = require('q');\nvar daemon = require('daemon');\n\nvar U = require('./u');\nvar itemModule = require('./item');\nvar arming = require('./arming');\nvar hubModule = require('./hub');\nvar auth = require('./auth');\nvar serviceModule = require('./service');\nvar web_service = require('./web_service');\nvar push_notification = require(\"./push_notification\");\nvar event_log = require('./event_log');\nvar sensor_history = require('./sensor_history');\nvar config = require('./config');\n\nvar Hub = hubModule.Hub;\nvar MqttHub = hubModule.MqttHub;\n\n\nvar logging = require('./logging');\nvar logger = new logging.Logger(__filename);\n\nprocess.on('uncaughtException', (err) => {\n  logger.error(\"uncaught exception: err: %s, stack:%s\", err, err.stack);\n  process.exit(1);\n});\n\n\n// the below exposes the Syslog transport\nvar syslog = winston_syslog.Syslog;\nprocess.title = \"alarmd\";\n\n//--------------------------------------------------------------------------\nwinston.setLevels({\n  debug: 0,\n  info: 1,\n  notice: 2,\n  warning: 3,\n  error: 4,\n  crit: 5,\n  alert: 6,\n  emerg: 7\n});\nwinston.addColors({\n  debug: 'green',\n  info: 'cyan',\n  silly: 'magenta',\n  warn: 'yellow',\n  error: 'red'\n});\n\n//--------------------------------------------------------------------------\n//      define command line parser\n//--------------------------------------------------------------------------\nvar packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));\n\nvar args = yargs\n    .usage(\"Usage: $0 -c config [options]\")\n    .help('h')\n    .alias('h', 'help')\n    .option('v', {\n      alias: 'version',\n      demand: false,\n      describe: 'display package version'\n    })\n    .option('d', {\n      alias: 'debug',\n      demand: false,\n      describe: 'debug logging'\n    })\n    .option('b', {\n      alias: 'background',\n      demand: false,\n      describe: 'daemon mode'\n    })\n    .option('l', {\n      alias: 'log',\n      demand: false,\n      describe: 'add (winston) log transport. available transports: console:options | file:options | syslog:options | DailyRotateFile:options',\n      type: 'string'\n    })\n    .option('m', {\n      alias: 'module',\n      demand: false,\n      describe: 'per module log level. e.g. \"-m item:debug\"'\n    })\n    .option('c', {\n      alias: 'config',\n      demand: false,\n      'default': '/etc/alarmd.conf',\n      describe: 'config file',\n      type: 'string'\n    })\n    .option('p', {\n      alias: 'pidfile',\n      demand: false,\n      describe: 'create pid file',\n      type: 'string'\n    })\n    .strict()\n    .parse(process.argv)\n  ;\n\nif (args['m']) {\n  var logParams = args['m'];\n  if (!_.isArray(logParams))\n    logParams = [args['m']];\n  _.forEach(logParams, (x) => {\n    var params = x.split(':');\n    if (params.length !== 2) {\n      cliError(util.format(\"invalid log format(%s). expecting ':' separator. example: -l item:info\", x));\n    }\n\n    var w:any = winston;\n    var levelNumber = w.levels[params[1]];\n    if (_.isUndefined(levelNumber)) {\n      cliError(util.format(\"invalid log format(%s). unknown level\", x));\n    }\n\n    if (!w.moduleLevels)\n      w.moduleLevels = {};\n    w.moduleLevels[params[0].toLowerCase()] = levelNumber;\n  });\n}\n\nif (args['v']) {\n  console.log(\"v\" + packageJson.version);\n  process.exit(0);\n}\n\nvar cliError = (msg) => {\n  console.error(\"CLI error: \" + msg);\n  process.exit(10);\n};\n\n\nvar debugLog = (args['d']) ? true : false;\n\nwinston.remove(winston.transports.Console);\n\nfunction appendTransport (transportType:string, options:any=undefined):boolean {\n  transportType = transportType.toLowerCase();\n\n  if (_.isString(options)) {\n    options = JSON.parse(options);\n  }\n  if (U.isNullOrUndefined(options)) {\n    options = {};\n  }\n  options.level = (debugLog) ? 'debug' : 'info';\n\n  if (transportType === 'console') {\n    if (U.isNullOrUndefined(options['colorize'])) {\n      var colorize : boolean = tty.isatty(1);\n      options[\"colorize\"] = colorize;\n    }\n    winston.add(winston.transports.Console, options);\n    return true;\n\n  } else if (transportType === 'file') {\n    winston.add(winston.transports.File, options);\n    return true;\n\n  } else if (transportType === 'dailyrotatefile') {\n    winston.add(winston.transports.DailyRotateFile, options);\n    return true;\n\n  } else if (transportType === 'syslog') {\n    options.json = false;\n    var transports:any;\n    transports = winston.transports;\n    winston.add(transports.Syslog, options);\n    return true;\n\n  }\n\n  return false;\n}\n\nif (!args['l']) {\n  appendTransport('console');\n} else {\n  var logTransports = args['l'];\n  if (!_.isArray(logTransports)) {\n    logTransports = [logTransports];\n  }\n\n  _.forEach(logTransports, (logTransportParam) => {\n    var pos = logTransportParam.indexOf(':');\n    var transportType:string;\n    var transportOptions:any;\n    if (pos > 0) {\n      transportType = logTransportParam.substr(0, pos);\n      transportOptions = logTransportParam.substr(pos+1);\n    } else {\n      transportType = logTransportParam;\n    }\n    if (!appendTransport(transportType, transportOptions)) {\n      cliError(\"failed to add transport: \" + logTransportParam);\n    }\n  });\n}\n//--------------------------------------------------------------------------\n//      load config file\n//--------------------------------------------------------------------------\n\nvar cfg:config.Config = new config.Config();\nvar service:serviceModule.Service = cfg.loadf(args['c']);\n\n//--------------------------------------------------------------------------\n\nif (args['b']) {\n  daemon();\n}\n\nif (args['p']) {\n  fs.writeFileSync(args['p'], process.pid.toString());\n}\n\nservice.start();\n"]}